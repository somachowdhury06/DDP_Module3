monthissix <- df$Month=6
df$Month==6
monthissix <- df$Month==6
monthissix
!monthissix
df[monthissix]
df[,monthissix]
df[df$Month==6]
df[df$Month==6,]
set <- df[df$Ozone>31 && df$Temp>90,]
setOzone <- df[df$Ozone>31,]
setTemp <- setOzone[setOzone$Temp<90]
setTemp <- setOzone[setOzone$Temp>90]
setTemp <- setOzone[setOzone$Temp>90,]
setTemp
mean(setTemp$Solar.R)
setSolarNA <- is.na(setTemp$Solar.R)
setSolarNA
setTemp[!is.na(setTemp$Solar.R),]
setTempNoNa <- setTemp[!is.na(setTemp$Solar.R),]
mean(setTempNoNa$Solar.R)
monthissix <- df[df$Month==6,]
monthissix
mean(monthissix$Temp)
monthisisfive <- df[df$Month==5,]
monthisisfive
monthisisfiveclean = monthisisfive[!is.na(monthisisfive$Ozone),]
max(monthisisfiveclean[monthisisfiveclean$Ozone])
max(monthisisfiveclean$Ozone)
install.packages("swirl")
install.packages("swirl")
library("swirl")
ls()
rm(list=ls())
ls()
package_version("swirl")
packageversion("swirl")
packageVersion("swirl")
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1,9,3.14)
z
?
c
z
z1 <- c(z,555,z)
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
swirl()
getwd()
ls
ls()
0
exit
swirl()
library("swirl")
swirl()
x <- 9
ls()
exit
exit()
quit
quit()
library("swirl")
swirl()
getwd()
ls()
x<-9
ls()
dir()
list.files()
?list.files
args'list.files'
?args
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path('Mydocuments/testdir')
file.path('Mydocuments/testdir')
file.path("mytest3.R")
file.path("mytest3.R","folder1")
file.path(("folder1","folder2"))
file.path("folder1","folder2")
?dir.create
dir.create("testdir2",recursive = TRUE)
dir.create(file.path("testdir2","testdir3)",recursive = TRUE)
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char,"soma")
my_name
paste(my_name,collapse = " ")
paste("Hello","world!",sep=" ")
paste(c(1:3),c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char,collapse = " ")
m_name <- c(my_char,"soma")
my_name <- c(my_char,"soma")
my_name <- c(my_char,"Swirl")
info()
my_char
my_name
my_name <- c(my_char, "Swirl")
info()
skip()
nxt()
my_name <- c(my_char, "soma")
my_name
paste(my_name,collapse = " ")
paste("Hello", "World!", sep="")
paste("Hello", "World!", sep=" ")
paste("Hello", "World!", sep=" ")
nxt()
paste("Hello", "World!", sep=" ")
paste("Hello", "World!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3),c("X","Y","Z"), sep="")
paste(LETTERS,1:4, sep = "-")
rm(l<=ls())
rm(l<-ls())
rm(ls())
ls()
rm(list=ls())
rm(list = ls())
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na == TRUE)
sum(my_na)
my_data
0/0
Inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(1:20,nrow = 4,ncol = 5)
my_matrix2 <- matrix(1:20,nrow = 4,ncol = 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gene","Kelly","Sean")
patients <- c("Bill", "Gene", "Kelly", "Sean")
nxt()
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(cnames,my_data)
colnames(my_data)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 == 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE, FALSE)
TRUE & c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
TRUE
5>8 || 6 != 8 && 4 > 3.9
nxt
nxt()
istrue(6>4)
isTRUE(6>4)
identical("twins","twins")
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 5)
which(ints > 7)
any(ints < 0)
all(int > 0)
all(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num=5)
remainder(4,div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun")
paste("Programming","is","fun!")
submit()
telegram("Programming","is","fun!")
submit()
mad_libs(place="New York",adjective="Sale",noun="McDonalds")
submit()
"Good" %p% "job!"
'I' %p% 'love' %p% 'R'
'I' "%p%" 'love' "%p%" 'R'
"I" "%p%" "love" "%p%" "R"
"I" %p% "love" %p% "R"
info()
nxt()
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3)
strptime(t3,"%B %d, %Y %H:%M")
t4 <- strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1, units = 'days')
swirl()
swirl::swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample((c(0,1),100),prob=c(0.3,0.7))
sample((c(0,1),100),replace=TRUE,prob=c(0.3,0.7))
sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips <- sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips==1)
sum(flips)
?rbinom
rbinom(1,size=100, prob=0.7)
rbinom(1,size=1, prob=0.7)
flips <- rbinom(1,size=1, prob=0.7)
flips <- rbinom(100,size=1, prob=0.7)
flips <- rbinom(n=100,size=1, prob=0.7)
flips <- rbinom(n = 100, size = 1, prob = 0.7)
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips <- sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(100,5)
rpois(5, 100)
rpois(5, lambda=mean(10)
)
rpois(5, 10)
my_pois <- replicate(100,rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
cm
hist(cm)
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist)
plot(x=cars$speed,y=cars$dist,xlab = "Speed")
plot(x=cars$speed,y=cars$dist,ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab = "Stopping Distance",main="My Plot")
plot(x=cars$speed,y=cars$dist,main="My Plot")
plot(cars,main="My Plot")
plot(cars,sub="My Plot subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot(mpg~cyl,data=mtcars)
hist(mtcars$mpg)
swirl::swirl()
Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "en_US.UTF-8")
library(lubridate)
help(package="lubridate")
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("192012"//)
ymd("192012//")
ymd("1920/1/2")
dt1
dt1_parsed<-ymd_hms(dt1)
dt1_parsed
class(dt1_parsed)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours=8, minutes = 34, seconds = 55
)
this_moment
this_moment <- now()
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
nyc <- now("EST")
nyc <- now("America/New_York")
nyc
depart <- nyc+days(2)
depart
depart <- update(depart, hours = 17, minutes=34, seconds=0)
depart <- update(depart, hours = 17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive,"Asia/Hong_Kong")
arrive <- with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008")
last_time <- mdy("June 17, 2008",tz="Singapore")
last_time
?interval
how_long <- interval(last_time,arrive)
as.period(how_long)
stopwatch()
rm(list <- ls())
rm(list = ls())
shiny::runApp('Training/DataScience/Developing Data Products/Learning Code/Course Project/ReproduciblePitch')
data <- read.csv("Trading data.csv",sep = ",", quote = '"', dec = ".", stringsAsFactors = FALSE)
getwd()
setwd("~/Training/DataScience/Developing Data Products/Learning Code/Course Project/ReproduciblePitch")
data <- read.csv("Trading data.csv",sep = ",", quote = '"', dec = ".", stringsAsFactors = FALSE)
head(data)
data$Symbol
runApp()
head(data)
runApp()
runApp()
runApp()
runApp()
dt <- data[data$Symbol == "DOW", ]
dt
runApp()
runApp()
dt
dt <- data[data$Symbol == "DOW", ]
dt
View(dt)
View(dt)
runApp()
runApp()
ggplot(data = dtSymbol, aes(x = Date, y = Close)) + geom_line()
dtSymbol <- data[data$Symbol == input$Symbol, ]
dt1 <- data[data$Symbol == "DOW", ]
ggplot(data = dt1, aes(x = Date, y = Close)) + geom_line()
head(dt1)
ggplot(data = dt1, aes(x = Date, y = Close.Last)) + geom_line()
p<-ggplot(data = dt1, aes(x = Date, y = Close.Last)) + geom_line()
ggplotly(p)
library(HistData)
runApp()
runApp()
runApp()
runApp()
View(dt)
runApp()
View(dt1)
View(dt1)
